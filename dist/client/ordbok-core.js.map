{"version":3,"sources":["dist/client/ordbok-core/ajax.js","dist/client/ordbok-core/utilities.js","dist/client/ordbok-core/dictionary.js","dist/client/ordbok-core/text.js","dist/client/ordbok-core/markdown.js","dist/client/ordbok-core/index.js"],"names":["define","require","exports","Object","defineProperty","value","Ajax","baseUrl","cacheTimeout","responseTimeout","this","_cache","_requests","prototype","onError","progressEvent","context","error","Error","result","response","toString","serverStatus","status","timestamp","timeStamp","url","isCountingRequest","ajax","reject","onLoad","resolve","onTimeout","hasOpenRequest","request","urlPath","Promise","cachedResult","Date","getTime","server","XMLHttpRequest","indexOf","open","timeout","addEventListener","send","catchedError","NON_CHARACTER_REGEXP","PATH_REGEXP","SPACE_REGEXP","Utilities","getExtension","filePath","match","exec","getBaseName","getKey","text","replace","trim","toLowerCase","getNorm","getParentPath","path","rotate","atob","substr","charCode","index","indexEnd","length","charCodeAt","push","String","fromCharCode","btoa","join","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","create","ajax_1","utilities_1","Dictionary","_super","apply","arguments","parse","stringified","categorySplit","dictionarySection","dictionaryPage","split","LINE_SEPARATOR","forEach","line","PAIR_SEPARATOR","VALUE_SEPARATOR","stringify","markdownPage","markdownSection","keys","headline","category","loadEntry","baseName","pageIndex","FILE_SEPARATOR","FILE_EXTENSION","then","catch","console","BRACKET_REGEXP","Text","call","endsWith","pattern","textLength","patternLength","lastIndexOf","removeBrackets","trimSpaces","text_1","HEADLINE_REGEXP","PAIR_REGEXP","PAGE_REGEXP","PARAGRAPH_REGEXP","Markdown","markdown","_pages","_raw","parsePage","section","page","paragraph","map","get","enumerable","configurable","pages","dictionary_1","markdown_1","__export","m","main"],"mappings":";;;AAIAA,OAAA,qBAAA,UAAA,WAAA,SAAAC,EAAAC,GACA,YACAC,QAAAC,eAAAF,EAAA,cAAAG,OAAA,GASA,IAAAC,GAAA,WAoBA,QAAAA,GAAAC,EAAAC,EAAAC,OACA,KAAAF,IAAAA,EAAA,QACA,KAAAC,IAAAA,EAAA,UACA,KAAAC,IAAAA,EAAA,KACAC,KAAAC,UACAD,KAAAE,UAAA,EACAF,KAAAH,QAAAA,EACAG,KAAAF,aAAAA,EAAA,EAAA,EAAAA,EACAE,KAAAD,gBAAAA,EAAA,EAAA,EAAAA,EAsJA,MAtIAH,GAAAO,UAAAC,QAAA,SAAAC,GACA,GAAAC,GAAAN,KAAAM,OACA,IAAAA,EAAA,CAGA,GAAAC,GAAA,GAAAC,OAAA,QACAD,GAAAE,OAAAT,KAAAU,SAAAC,WACAJ,EAAAK,aAAAZ,KAAAa,OACAN,EAAAO,UAAAT,EAAAU,UACAR,EAAAS,IAAAV,EAAAU,IACAV,EAAAW,oBACAX,EAAAW,mBAAA,EACAX,EAAAY,KAAAhB,aAEAI,EAAAa,OAAAZ,KAWAX,EAAAO,UAAAiB,OAAA,SAAAf,GACA,GAAAC,GAAAN,KAAAM,OACAA,KAGAA,EAAAW,oBACAX,EAAAW,mBAAA,EACAX,EAAAY,KAAAhB,aAEAI,EAAAe,SACAZ,QAAAT,KAAAU,UAAA,IAAAC,WACAC,aAAAZ,KAAAa,OACAC,UAAAT,EAAAU,UACAC,IAAAV,EAAAU,QAYApB,EAAAO,UAAAmB,UAAA,SAAAjB,GACA,GAAAC,GAAAN,KAAAM,OACA,IAAAA,EAAA,CAGA,GAAAC,GAAA,GAAAC,OAAA,UACAD,GAAAE,OAAAT,KAAAU,SAAAC,WACAJ,EAAAK,aAAAZ,KAAAa,OACAN,EAAAO,UAAAT,EAAAU,UACAR,EAAAS,IAAAV,EAAAU,IACAV,EAAAW,oBACAX,EAAAW,mBAAA,EACAX,EAAAY,KAAAhB,aAEAI,EAAAa,OAAAZ,KAUAX,EAAAO,UAAAoB,eAAA,WAIA,MAHAvB,MAAAE,UAAA,IACAF,KAAAE,UAAA,GAEAF,KAAAE,UAAA,GAQAN,EAAAO,UAAAqB,QAAA,SAAAC,GACA,GAAAP,GAAAlB,IACA,OAAA,IAAA0B,SAAA,SAAAL,EAAAF,GACA,GAAAH,GAAAE,EAAArB,QAAA4B,EACAnB,GAAAY,KAAAA,EAAAG,QAAAA,EAAAF,OAAAA,EAAAH,IAAAA,EACA,IAAAE,EAAApB,aAAA,EAAA,CACA,GAAA6B,GAAAT,EAAAjB,OAAAe,GACAlB,GAAA,GAAA8B,OAAAC,UAAAX,EAAApB,YACA,IAAA6B,GACAA,EAAAb,UAAAhB,EAEA,WADAuB,GAAAM,SAGAT,GAAAjB,OAAAe,GAEA,GAAAc,GAAA,GAAAC,eACAD,GAAAxB,QAAAA,EACAA,EAAAW,mBAAA,CACA,KACAC,EAAApB,cAAA,IACA,IAAAkB,EAAAgB,QAAA,KACAF,EAAAG,KAAA,MAAAjB,EAAA,KAAA,GAAAY,OAAAC,WAAA,GAGAC,EAAAG,KAAA,MAAAjB,GAAA,GAEAE,EAAAhB,YACAI,EAAAW,mBAAA,EACAa,EAAAI,QAAAhB,EAAAnB,gBACA+B,EAAAK,iBAAA,OAAAjB,EAAAE,QACAU,EAAAK,iBAAA,QAAAjB,EAAAd,SACA0B,EAAAK,iBAAA,UAAAjB,EAAAI,WACAQ,EAAAM,OAEA,MAAAC,GACA,GAAA9B,GAAA8B,CACA9B,GAAAE,OAAAqB,EAAApB,UAAA,GACAH,EAAAO,WAAA,GAAAc,OAAAC,UACAtB,EAAAK,aAAAkB,EAAAjB,OACAN,EAAAS,IAAAV,EAAAU,IACAV,EAAAW,oBACAX,EAAAW,mBAAA,EACAX,EAAAY,KAAAhB,aAEAiB,EAAAZ,OAIAX,IAEAJ,GAAAI,KAAAA,IC/LAN,OAAA,0BAAA,UAAA,WAAA,SAAAC,EAAAC,GACA,YACAC,QAAAC,eAAAF,EAAA,cAAAG,OAAA,GASA,IAAA2C,GAAA,+BAIAC,EAAA,4BAIAC,EAAA,QAOA,SAAAC,GAYA,QAAAC,GAAAC,GACA,GAAAC,GAAAL,EAAAM,KAAAF,EACA,OAAAC,IAAAA,EAAA,IAAA,GASA,QAAAE,GAAAH,GACA,GAAAC,GAAAL,EAAAM,KAAAF,EACA,OAAAC,IAAAA,EAAA,IAAA,GASA,QAAAG,GAAAC,GACA,MAAAA,GACAC,QAAAX,EAAA,KACAY,OACAD,QAAAT,EAAA,KACAW,cASA,QAAAC,GAAAJ,GACA,MAAAA,GACAC,QAAAX,EAAA,KACAY,OACAD,QAAAT,EAAA,KACAW,cASA,QAAAE,GAAAC,GACA,GAAAV,GAAAL,EAAAM,KAAAS,EACA,OAAAV,IAAAA,EAAA,IAAA,GASA,QAAAW,GAAAP,GACA,GAAA,IAAAA,EAAAhB,QAAA,WACAgB,EAAAQ,KAAAR,EAAAS,OAAA,QAEA,CAEA,IAAA,GADAhD,MACAiD,EAAA,EAAAC,EAAA,EAAAC,EAAAZ,EAAAa,OAAAF,EAAAC,IAAAD,EACAD,EAAAV,EAAAc,WAAAH,GACAD,GAAAA,EAAA,IAAA,KAAA,IACAjD,EAAAsD,KAAAC,OAAAC,aAAAP,GAEAV,GAAA,UAAAkB,KAAAzD,EAAA0D,KAAA,KAEA,MAAAnB,GAtEAP,EAAAC,aAAAA,EAWAD,EAAAK,YAAAA,EAcAL,EAAAM,OAAAA,EAcAN,EAAAW,QAAAA,EAWAX,EAAAY,cAAAA,EAsBAZ,EAAAc,OAAAA,GACA/D,EAAAiD,YAAAjD,EAAAiD,gBCnHA,IAAA2B,WAAApE,MAAAA,KAAAoE,WAAA,WACA,GAAAC,GAAA,SAAAC,EAAAC,GAIA,OAHAF,EAAA5E,OAAA+E,iBACAC,uBAAAC,QAAA,SAAAJ,EAAAC,GAAAD,EAAAG,UAAAF,IACA,SAAAD,EAAAC,GAAA,IAAA,GAAAI,KAAAJ,GAAAA,EAAAK,eAAAD,KAAAL,EAAAK,GAAAJ,EAAAI,MACAL,EAAAC,GAEA,OAAA,UAAAD,EAAAC,GAEA,QAAAM,KAAA7E,KAAA8E,YAAAR,EADAD,EAAAC,EAAAC,GAEAD,EAAAnE,UAAA,OAAAoE,EAAA9E,OAAAsF,OAAAR,IAAAM,EAAA1E,UAAAoE,EAAApE,UAAA,GAAA0E,OAGAvF,QAAA,2BAAA,UAAA,UAAA,SAAA,eAAA,SAAAC,EAAAC,EAAAwF,EAAAC,GACA,YACAxF,QAAAC,eAAAF,EAAA,cAAAG,OAAA,GASA,IAAAuF,GAAA,SAAAC,GAEA,QAAAD,KACA,MAAA,QAAAC,GAAAA,EAAAC,MAAApF,KAAAqF,YAAArF,KAkHA,MApHAoE,WAAAc,EAAAC,GAeAD,EAAAI,MAAA,SAAAC,GACA,GACAC,GACAC,EAFAC,IAgBA,OAbAH,GACAI,MAAAT,EAAAU,gBACAC,QAAA,SAAAC,GACA,IAAA,IAAAA,EAAA9D,QAAAkD,EAAAa,gBAEA,YADAL,EAAAI,GAAAL,KAGAA,KAGAD,EAAAM,EAAAH,MAAAT,EAAAa,eAAA,GACAN,EAAAD,EAAA,IAAAA,EAAA,GAAAG,MAAAT,EAAAc,oBAEAN,GAQAR,EAAAe,UAAA,SAAAC,GACA,GACAC,GADAZ,IAeA,OAbA9F,QACA2G,KAAAF,GACAL,QAAA,SAAAQ,GACAd,EAAAxB,KAAAkB,EAAAxC,UAAAM,OAAAsD,IACAF,EAAAD,EAAAG,GACA5G,OACA2G,KAAAD,GACAN,QAAA,SAAAS,GACA,MAAAf,GAAAxB,KAAAkB,EAAAxC,UAAAM,OAAAuD,GACApB,EAAAa,eACAI,EAAAG,GAAAnC,KAAAe,EAAAc,sBAGAT,EAAApB,KAAAe,EAAAU,iBAgBAV,EAAA/E,UAAAoG,UAAA,SAAAC,EAAAC,GAEA,WADA,KAAAA,IAAAA,EAAA,GACAzG,KACAwB,QAAAyD,EAAAxC,UAAAM,OAAAyD,GACAtB,EAAAwB,eACAD,EACAvB,EAAAyB,gBACAC,KAAA,SAAAlG,GACA,KAAAA,YAAAF,QACAE,EAAAE,cAAA,KAGA,MAAAsE,GAAAI,MAAA5E,EAAAD,UAEAoG,MAAA,SAAAtG,GACAuG,QAAAvG,MAAAA,MAYA2E,EAAAyB,eAAA,OAIAzB,EAAAwB,eAAA,IAIAxB,EAAAU,eAAA,KAIAV,EAAAa,eAAA,IAIAb,EAAAc,gBAAA,IACAd,GACAF,EAAApF,KACAJ,GAAA0F,WAAAA,GC/IA,IAAAd,WAAApE,MAAAA,KAAAoE,WAAA,WACA,GAAAC,GAAA,SAAAC,EAAAC,GAIA,OAHAF,EAAA5E,OAAA+E,iBACAC,uBAAAC,QAAA,SAAAJ,EAAAC,GAAAD,EAAAG,UAAAF,IACA,SAAAD,EAAAC,GAAA,IAAA,GAAAI,KAAAJ,GAAAA,EAAAK,eAAAD,KAAAL,EAAAK,GAAAJ,EAAAI,MACAL,EAAAC,GAEA,OAAA,UAAAD,EAAAC,GAEA,QAAAM,KAAA7E,KAAA8E,YAAAR,EADAD,EAAAC,EAAAC,GAEAD,EAAAnE,UAAA,OAAAoE,EAAA9E,OAAAsF,OAAAR,IAAAM,EAAA1E,UAAAoE,EAAApE,UAAA,GAAA0E,OAGAvF,QAAA,qBAAA,UAAA,WAAA,SAAAC,EAAAC,GACA,YACAC,QAAAC,eAAAF,EAAA,cAAAG,OAAA,GASA,IAAAoH,GAAA,oCAIAvE,EAAA,OASAwE,EAAA,SAAA7B,GAOA,QAAA6B,GAAAhE,GACA,MAAAmC,GAAA8B,KAAAjH,KAAAgD,IAAAhD,KAqEA,MA5EAoE,WAAA4C,EAAA7B,GAuBA6B,EAAAE,SAAA,SAAAlE,EAAAmE,GACA,GAAAnE,IAAAmE,EACA,OAAA,CAEA,IAAAC,GAAApE,EAAAa,OACAwD,EAAAF,EAAAtD,MACA,OAAAwD,IAAAD,GACApE,EAAAsE,YAAAH,KAAAC,EAAAC,GAQAL,EAAAO,eAAA,SAAAvE,GACA,MAAAA,GAAAC,QAAA8D,EAAA,IAAA9D,QAAAT,EAAA,KAAAU,QAQA8D,EAAAQ,WAAA,SAAAxE,GACA,MAAAA,GAAAC,QAAAT,EAAA,KAAAU,QAaA8D,EAAA7G,UAAA+G,SAAA,SAAAC,GACA,MAAAH,GAAAE,SAAAlH,KAAAW,WAAAwG,IAKAH,EAAA7G,UAAAoH,eAAA,WACA,MAAA,IAAAP,GAAAA,EAAAO,eAAAvH,KAAAW,cAKAqG,EAAA7G,UAAAqH,WAAA,WACA,MAAA,IAAAR,GAAAA,EAAAQ,WAAAxH,KAAAW,cAEAqG,GACAhD,OACAxE,GAAAwH,KAAAA,ICpHA1H,OAAA,yBAAA,UAAA,UAAA,UAAA,SAAAC,EAAAC,EAAAiI,GACA,YACAhI,QAAAC,eAAAF,EAAA,cAAAG,OAAA,GASA,IAAA+H,GAAA,gDAIAC,EAAA,+BAIAC,EAAA,kCAIAC,EAAA,SASAC,EAAA,WAYA,QAAAA,GAAAC,GACA/H,KAAAgI,UACAhI,KAAAiI,KAAAF,EACA/H,KAAAsF,MAAAyC,GAyEA,MA5DAD,GAAAI,UAAA,SAAAhC,GACA,GACAtD,GACAuF,EAFAC,IAoBA,OAjBAlC,GACAP,MAAAkC,GACAhC,QAAA,SAAAwC,GACAzF,EAAA8E,EAAA7E,KAAAwF,GACAzF,IACAwF,EAAAX,EAAAT,KAAAQ,WAAA5E,EAAA,IAAAA,EAAA,KAAAuF,MAEAA,IAGAvF,EAAA+E,EAAA9E,KAAAwF,MAEAF,EAAAvF,EAAA,IAAAA,EAAA,GACA+C,MAAA,KACA2C,IAAAb,EAAAT,KAAAQ,eAGAY,GAEA3I,OAAAC,eAAAoI,EAAA3H,UAAA,SAIAoI,IAAA,WACA,MAAAvI,MAAAgI,QAEAQ,YAAA,EACAC,cAAA,IAEAhJ,OAAAC,eAAAoI,EAAA3H,UAAA,OAIAoI,IAAA,WACA,MAAAvI,MAAAiI,MAEAO,YAAA,EACAC,cAAA,IAaAX,EAAA3H,UAAAmF,MAAA,SAAAyC,GACA,GAAAW,GAAA1I,KAAAgI,MACAD,GACApC,MAAAiC,GACA/B,QAAA,SAAAuC,GAAA,MAAAM,GAAA3E,KAAA+D,EAAAI,UAAAE,OAEAN,IAEAtI,GAAAsI,SAAAA,IC1HAxI,OAAA,sBAAA,UAAA,UAAA,SAAA,eAAA,aAAA,SAAA,eAAA,SAAAC,EAAAC,EAAAwF,EAAA2D,EAAAC,EAAAnB,EAAAxC,GACA,YACA,SAAA4D,GAAAC,GACA,IAAA,GAAAnE,KAAAmE,GAAAtJ,EAAAoF,eAAAD,KAAAnF,EAAAmF,GAAAmE,EAAAnE,IAEAlF,OAAAC,eAAAF,EAAA,cAAAG,OAAA,IACAkJ,EAAA7D,GACA6D,EAAAF,GACAE,EAAAD,GACAC,EAAApB,GACAoB,EAAA5D,KAGA3F,OAAA,gBAAA,sBAAA,SAAAyJ,GAAA,MAAAA","file":"ordbok-core.js","sourcesContent":["/*---------------------------------------------------------------------------*/\n/* Copyright (c) ORDBOK contributors. All rights reserved.                   */\n/* Licensed under the MIT License. See the LICENSE file in the project root. */\n/*---------------------------------------------------------------------------*/\ndefine('@ordbok/core/ajax',[\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    /**\n     * Manages AJAX communication with a server.\n     */\n    var Ajax = /** @class */ (function () {\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        /**\n         * Creates a new managed AJAX instance.\n         *\n         * @param baseUrl\n         *        Base URL of the server.\n         *\n         * @param cacheTimeout\n         *        Use 0 milliseconds to turn off all cache systems. Default is 1\n         *        hour.\n         *\n         * @param responseTimeout\n         *        Time in milliseconds to wait for a server response. Default are 60\n         *        seconds.\n         */\n        function Ajax(baseUrl, cacheTimeout, responseTimeout) {\n            if (baseUrl === void 0) { baseUrl = ''; }\n            if (cacheTimeout === void 0) { cacheTimeout = 3600000; }\n            if (responseTimeout === void 0) { responseTimeout = 60000; }\n            this._cache = {};\n            this._requests = 0;\n            this.baseUrl = baseUrl;\n            this.cacheTimeout = (cacheTimeout < 0 ? 0 : cacheTimeout);\n            this.responseTimeout = (responseTimeout < 0 ? 0 : responseTimeout);\n        }\n        /* *\n         *\n         *  Events\n         *\n         * */\n        /**\n         * Handles server error.\n         *\n         * @param this\n         *        Extended XMLHTTPRequest.\n         *\n         * @param progressEvent\n         *        XMLHTTPRequest event.\n         */\n        Ajax.prototype.onError = function (progressEvent) {\n            var context = this.context;\n            if (!context) {\n                return;\n            }\n            var error = new Error('error');\n            error.result = this.response.toString();\n            error.serverStatus = this.status;\n            error.timestamp = progressEvent.timeStamp;\n            error.url = context.url;\n            if (context.isCountingRequest) {\n                context.isCountingRequest = false;\n                context.ajax._requests--;\n            }\n            context.reject(error);\n        };\n        /**\n         * Handles server data.\n         *\n         * @param this\n         *        Extended XMLHTTPRequest.\n         *\n         * @param progressEvent\n         *        XMLHTTPRequest event.\n         */\n        Ajax.prototype.onLoad = function (progressEvent) {\n            var context = this.context;\n            if (!context) {\n                return;\n            }\n            if (context.isCountingRequest) {\n                context.isCountingRequest = false;\n                context.ajax._requests--;\n            }\n            context.resolve({\n                result: (this.response || '').toString(),\n                serverStatus: this.status,\n                timestamp: progressEvent.timeStamp,\n                url: context.url\n            });\n        };\n        /**\n         * Handles server timeout.\n         *\n         * @param this\n         *        Extended XMLHTTPRequest.\n         *\n         * @param progressEvent\n         *        XMLHTTPRequest event.\n         */\n        Ajax.prototype.onTimeout = function (progressEvent) {\n            var context = this.context;\n            if (!context) {\n                return;\n            }\n            var error = new Error('timeout');\n            error.result = this.response.toString();\n            error.serverStatus = this.status;\n            error.timestamp = progressEvent.timeStamp;\n            error.url = context.url;\n            if (context.isCountingRequest) {\n                context.isCountingRequest = false;\n                context.ajax._requests--;\n            }\n            context.reject(error);\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Checks for open requests.\n         */\n        Ajax.prototype.hasOpenRequest = function () {\n            if (this._requests < 0) {\n                this._requests = 0;\n            }\n            return (this._requests > 0);\n        };\n        /**\n         * Requests a server resource.\n         *\n         * @param urlPath\n         *        Base relative path to the requested server resource.\n         */\n        Ajax.prototype.request = function (urlPath) {\n            var ajax = this;\n            return new Promise(function (resolve, reject) {\n                var url = ajax.baseUrl + urlPath;\n                var context = { ajax: ajax, resolve: resolve, reject: reject, url: url };\n                if (ajax.cacheTimeout > 0) {\n                    var cachedResult = ajax._cache[url];\n                    var cacheTimeout = (new Date()).getTime() + ajax.cacheTimeout;\n                    if (cachedResult &&\n                        cachedResult.timestamp > cacheTimeout) {\n                        resolve(cachedResult);\n                        return;\n                    }\n                    delete ajax._cache[url];\n                }\n                var server = new XMLHttpRequest();\n                server.context = context;\n                context.isCountingRequest = false;\n                try {\n                    if (ajax.cacheTimeout <= 0 &&\n                        url.indexOf('?') === -1) {\n                        server.open('GET', (url + '?' + (new Date()).getTime()), true);\n                    }\n                    else {\n                        server.open('GET', url, true);\n                    }\n                    ajax._requests++;\n                    context.isCountingRequest = true;\n                    server.timeout = ajax.responseTimeout;\n                    server.addEventListener('load', ajax.onLoad);\n                    server.addEventListener('error', ajax.onError);\n                    server.addEventListener('timeout', ajax.onTimeout);\n                    server.send();\n                }\n                catch (catchedError) {\n                    var error = catchedError;\n                    error.result = (server.response || '');\n                    error.timestamp = (new Date()).getTime();\n                    error.serverStatus = server.status;\n                    error.url = context.url;\n                    if (context.isCountingRequest) {\n                        context.isCountingRequest = false;\n                        context.ajax._requests--;\n                    }\n                    reject(error);\n                }\n            });\n        };\n        return Ajax;\n    }());\n    exports.Ajax = Ajax;\n});\n//# sourceMappingURL=ajax.js.map;\n","/*---------------------------------------------------------------------------*/\n/* Copyright (c) ORDBOK contributors. All rights reserved.                   */\n/* Licensed under the MIT License. See the LICENSE file in the project root. */\n/*---------------------------------------------------------------------------*/\ndefine('@ordbok/core/utilities',[\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    /**\n     * Non-character pattern\n     */\n    var NON_CHARACTER_REGEXP = /[^0-9A-Za-z\\u0080-\\uFFFF -]/g;\n    /**\n     * Path pattern\n     */\n    var PATH_REGEXP = /^(.*?)([^\\.\\/]*)([^\\/]*)$/;\n    /**\n     * Space pattern\n     */\n    var SPACE_REGEXP = /\\s+/g;\n    /* *\n     *\n     *  Modules\n     *\n     * */\n    var Utilities;\n    (function (Utilities) {\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Returns the extension of a file path.\n         *\n         * @param filePath\n         *        File path\n         */\n        function getExtension(filePath) {\n            var match = PATH_REGEXP.exec(filePath);\n            return (match && match[3] || '');\n        }\n        Utilities.getExtension = getExtension;\n        /**\n         * Returns the base name of a file path.\n         *\n         * @param filePath\n         *        File path\n         */\n        function getBaseName(filePath) {\n            var match = PATH_REGEXP.exec(filePath);\n            return (match && match[2] || '');\n        }\n        Utilities.getBaseName = getBaseName;\n        /**\n         * Returns the universal key for the given text.\n         *\n         * @param text\n         *        Text to generate key from\n         */\n        function getKey(text) {\n            return text\n                .replace(NON_CHARACTER_REGEXP, ' ')\n                .trim()\n                .replace(SPACE_REGEXP, '-')\n                .toLowerCase();\n        }\n        Utilities.getKey = getKey;\n        /**\n         * Normalize a text to lower case characters and space only.\n         *\n         * @param text\n         *        Text to filter\n         */\n        function getNorm(text) {\n            return text\n                .replace(NON_CHARACTER_REGEXP, ' ')\n                .trim()\n                .replace(SPACE_REGEXP, ' ')\n                .toLowerCase();\n        }\n        Utilities.getNorm = getNorm;\n        /**\n         * Returns the parent part of the path.\n         *\n         * @param path\n         *        Path with parent\n         */\n        function getParentPath(path) {\n            var match = PATH_REGEXP.exec(path);\n            return (match && match[1] || '');\n        }\n        Utilities.getParentPath = getParentPath;\n        /**\n         * Binary rotation of a given text.\n         *\n         * @param text\n         *        Text to rotate\n         */\n        function rotate(text) {\n            if (text.indexOf('base64,') === 0) {\n                text = atob(text.substr(7));\n            }\n            else {\n                var result = [];\n                for (var charCode = 0, index = 0, indexEnd = text.length; index < indexEnd; ++index) {\n                    charCode = text.charCodeAt(index);\n                    charCode += (charCode < 128 ? 128 : -128);\n                    result.push(String.fromCharCode(charCode));\n                }\n                text = 'base64,' + btoa(result.join(''));\n            }\n            return text;\n        }\n        Utilities.rotate = rotate;\n    })(Utilities = exports.Utilities || (exports.Utilities = {}));\n});\n//# sourceMappingURL=utilities.js.map;\n","/*---------------------------------------------------------------------------*/\n/* Copyright (c) ORDBOK contributors. All rights reserved.                   */\n/* Licensed under the MIT License. See the LICENSE file in the project root. */\n/*---------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\ndefine('@ordbok/core/dictionary',[\"require\", \"exports\", \"./ajax\", \"./utilities\"], function (require, exports, ajax_1, utilities_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    /**\n     * Manages dictionary communication with a server.\n     */\n    var Dictionary = /** @class */ (function (_super) {\n        __extends(Dictionary, _super);\n        function Dictionary() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        /**\n         * Converts a text into a dictionary entry.\n         *\n         * @param stringified\n         *        Dictionary text\n         */\n        Dictionary.parse = function (stringified) {\n            var dictionaryPage = {};\n            var categorySplit;\n            var dictionarySection;\n            stringified\n                .split(Dictionary.LINE_SEPARATOR)\n                .forEach(function (line) {\n                if (line.indexOf(Dictionary.PAIR_SEPARATOR) === -1) {\n                    dictionaryPage[line] = dictionarySection = {};\n                    return;\n                }\n                if (!dictionarySection) {\n                    return;\n                }\n                categorySplit = line.split(Dictionary.PAIR_SEPARATOR, 2);\n                dictionarySection[categorySplit[0]] = (categorySplit[1].split(Dictionary.VALUE_SEPARATOR));\n            });\n            return dictionaryPage;\n        };\n        /**\n         * Converts a Markdown page into a dictionary text.\n         *\n         * @param markdownPage\n         *        Markdown page\n         */\n        Dictionary.stringify = function (markdownPage) {\n            var stringified = [];\n            var markdownSection;\n            Object\n                .keys(markdownPage)\n                .forEach(function (headline) {\n                stringified.push(utilities_1.Utilities.getKey(headline));\n                markdownSection = markdownPage[headline];\n                Object\n                    .keys(markdownSection)\n                    .forEach(function (category) {\n                    return stringified.push(utilities_1.Utilities.getKey(category) +\n                        Dictionary.PAIR_SEPARATOR +\n                        markdownSection[category].join(Dictionary.VALUE_SEPARATOR));\n                });\n            });\n            return stringified.join(Dictionary.LINE_SEPARATOR);\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Loads a dictionary entry from the server.\n         *\n         * @param baseName\n         *        Base name of the translation file\n         *\n         * @param pageIndex\n         *        Index of the entry page to load\n         */\n        Dictionary.prototype.loadEntry = function (baseName, pageIndex) {\n            if (pageIndex === void 0) { pageIndex = 0; }\n            return this\n                .request(utilities_1.Utilities.getKey(baseName) +\n                Dictionary.FILE_SEPARATOR +\n                pageIndex +\n                Dictionary.FILE_EXTENSION)\n                .then(function (response) {\n                if (response instanceof Error ||\n                    response.serverStatus >= 400) {\n                    return;\n                }\n                return Dictionary.parse(response.result);\n            })\n                .catch(function (error) {\n                console.error(error);\n                return;\n            });\n        };\n        /* *\n         *\n         *  Static Variables\n         *\n         * */\n        /**\n         * File extension of dictionary entries.\n         */\n        Dictionary.FILE_EXTENSION = '.txt';\n        /**\n         * Character to separate a base file name from its page index.\n         */\n        Dictionary.FILE_SEPARATOR = '-';\n        /**\n         * Line character to separate sections.\n         */\n        Dictionary.LINE_SEPARATOR = '\\n';\n        /**\n         * Character to separate a category from its values.\n         */\n        Dictionary.PAIR_SEPARATOR = ':';\n        /**\n         * Character to separate a category's values.\n         */\n        Dictionary.VALUE_SEPARATOR = ';';\n        return Dictionary;\n    }(ajax_1.Ajax));\n    exports.Dictionary = Dictionary;\n});\n//# sourceMappingURL=dictionary.js.map;\n","/*---------------------------------------------------------------------------*/\n/* Copyright (c) ORDBOK contributors. All rights reserved.                   */\n/* Licensed under the MIT License. See the LICENSE file in the project root. */\n/*---------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\ndefine('@ordbok/core/text',[\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    /**\n     * Inclusive brackets pattern\n     */\n    var BRACKET_REGEXP = /\\([^\\)]*\\)|\\[[^\\]]*\\]|\\{[^\\}]*\\}/g;\n    /**\n     * Inclusive space pattern\n     */\n    var SPACE_REGEXP = /\\s+/g;\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    /**\n     * Text utility class.\n     */\n    var Text = /** @class */ (function (_super) {\n        __extends(Text, _super);\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        function Text(text) {\n            return _super.call(this, text) || this;\n        }\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        /**\n         * Tests for a matching pattern at the text end.\n         *\n         * @param text\n         *        Text to test.\n         *\n         * @param pattern\n         *        Pattern to match.\n         */\n        Text.endsWith = function (text, pattern) {\n            if (text === pattern) {\n                return true;\n            }\n            var textLength = text.length;\n            var patternLength = pattern.length;\n            return (patternLength <= textLength &&\n                text.lastIndexOf(pattern) === textLength - patternLength);\n        };\n        /**\n         * Removes brackets and their content.\n         *\n         * @param text\n         *        Text to filter.\n         */\n        Text.removeBrackets = function (text) {\n            return text.replace(BRACKET_REGEXP, '').replace(SPACE_REGEXP, ' ').trim();\n        };\n        /**\n         * Trims all unnecessary spaces.\n         *\n         * @param text\n         *        Text to filter.\n         */\n        Text.trimSpaces = function (text) {\n            return text.replace(SPACE_REGEXP, ' ').trim();\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Tests for a matching pattern at the text end.\n         *\n         * @param pattern\n         *        Pattern to match.\n         */\n        Text.prototype.endsWith = function (pattern) {\n            return Text.endsWith(this.toString(), pattern);\n        };\n        /**\n         * Removes brackets and their content.\n         */\n        Text.prototype.removeBrackets = function () {\n            return new Text(Text.removeBrackets(this.toString()));\n        };\n        /**\n         * Trims all unnecessary spaces.\n         */\n        Text.prototype.trimSpaces = function () {\n            return new Text(Text.trimSpaces(this.toString()));\n        };\n        return Text;\n    }(String));\n    exports.Text = Text;\n});\n//# sourceMappingURL=text.js.map;\n","/*---------------------------------------------------------------------------*/\n/* Copyright (c) ORDBOK contributors. All rights reserved.                   */\n/* Licensed under the MIT License. See the LICENSE file in the project root. */\n/*---------------------------------------------------------------------------*/\ndefine('@ordbok/core/markdown',[\"require\", \"exports\", \"./text\"], function (require, exports, text_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    /**\n     * Section headline\n     */\n    var HEADLINE_REGEXP = /^(?:#+([\\s\\S]*)|([\\s\\S]*?)\\n(?:={3,}|-{3,}))$/;\n    /**\n     * Key value pair\n     */\n    var PAIR_REGEXP = /^([^\\:\\n\\r\\t\\v]+):([\\s\\S]*)$/;\n    /**\n     * Page separator\n     */\n    var PAGE_REGEXP = /(?:^\\n?|\\n\\n)-{3,}(?:\\n\\n|\\n?$)/;\n    /**\n     * Paragraph separator\n     */\n    var PARAGRAPH_REGEXP = /\\n{2,}/;\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    /**\n     * Markdown parser\n     */\n    var Markdown = /** @class */ (function () {\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        /**\n         * Parse markdown.\n         *\n         * @param markdown\n         *        Markdown to parse\n         */\n        function Markdown(markdown) {\n            this._pages = [];\n            this._raw = markdown;\n            this.parse(markdown);\n        }\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        /**\n         * Internal markdown page parser\n         *\n         * @param markdownPage\n         *        Markdown page\n         */\n        Markdown.parsePage = function (markdownPage) {\n            var page = {};\n            var match;\n            var section;\n            markdownPage\n                .split(PARAGRAPH_REGEXP)\n                .forEach(function (paragraph) {\n                match = HEADLINE_REGEXP.exec(paragraph);\n                if (match) {\n                    page[text_1.Text.trimSpaces(match[1] || match[2])] = section = {};\n                }\n                if (!section) {\n                    return;\n                }\n                match = PAIR_REGEXP.exec(paragraph);\n                if (match) {\n                    section[match[1]] = match[2]\n                        .split(';')\n                        .map(text_1.Text.trimSpaces);\n                }\n            });\n            return page;\n        };\n        Object.defineProperty(Markdown.prototype, \"pages\", {\n            /**\n             * Markdown pages\n             */\n            get: function () {\n                return this._pages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Markdown.prototype, \"raw\", {\n            /**\n             * Raw markdown\n             */\n            get: function () {\n                return this._raw;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Internal markdown parser\n         *\n         * @param markdown\n         *        Markdown to parse\n         */\n        Markdown.prototype.parse = function (markdown) {\n            var pages = this._pages;\n            markdown\n                .split(PAGE_REGEXP)\n                .forEach(function (page) { return pages.push(Markdown.parsePage(page)); });\n        };\n        return Markdown;\n    }());\n    exports.Markdown = Markdown;\n});\n//# sourceMappingURL=markdown.js.map;\n","/*---------------------------------------------------------------------------*/\n/* Copyright (c) ORDBOK contributors. All rights reserved.                   */\n/* Licensed under the MIT License. See the LICENSE file in the project root. */\n/*---------------------------------------------------------------------------*/\ndefine('@ordbok/core/index',[\"require\", \"exports\", \"./ajax\", \"./dictionary\", \"./markdown\", \"./text\", \"./utilities\"], function (require, exports, ajax_1, dictionary_1, markdown_1, text_1, utilities_1) {\n    \"use strict\";\n    function __export(m) {\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    __export(ajax_1);\n    __export(dictionary_1);\n    __export(markdown_1);\n    __export(text_1);\n    __export(utilities_1);\n});\n//# sourceMappingURL=index.js.map;\ndefine('@ordbok/core', ['@ordbok/core/index'], function (main) { return main; });\n\n"]}