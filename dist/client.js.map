{"version":3,"sources":["dist/client/ajax.js","dist/client/text.js","dist/client/markdown.js","dist/client/utilities.js","dist/client/index.js"],"names":["define","require","exports","Object","defineProperty","value","Ajax","baseUrl","cacheTimeout","responseTimeout","this","_cache","prototype","request","urlPath","_this","Promise","resolve","reject","url","cachedResult","Date","getTime","timestamp","server","XMLHttpRequest","indexOf","open","timeout","addEventListener","evt","result","response","toString","serverStatus","status","timeStamp","error","Error","send","catchedError","SPACE_REGEXP","Text","text","_value","endsWith","pattern","textLength","length","patternLength","lastIndexOf","trimSpaces","replace","trim","text_1","HEADLINE_REGEXP","PAIR_REGEXP","PAGE_REGEXP","PARAGRAPH_REGEXP","Markdown","markdown","_pages","_raw","parse","parsePage","markdownPage","match","section","page","split","forEach","paragraph","exec","map","get","enumerable","configurable","pages","push","NON_CHARACTER_REGEXP","PATH_REGEXP","Utilities","getExtension","filePath","getBaseName","getKey","toLowerCase","getNorm","getParentPath","path","rotate","c","i","ie","charCodeAt","String","fromCharCode","join","ajax_1","markdown_1","utilities_1","__export","m","p","hasOwnProperty","main"],"mappings":"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","file":"client.js","sourcesContent":["/**\n * @license MIT\n * @author Sophie Bremer\n */\ndefine('@ordbok/core/dist/lib/ajax',[\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    /**\n     * Manages AJAX communication with a server.\n     */\n    var Ajax = /** @class */ (function () {\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        /**\n         * Creates a new managed AJAX instance.\n         *\n         * @param baseUrl\n         *        Base URL of the server\n         *\n         * @param cacheTimeout\n         *        Use 0 milliseconds to turn off all cache systems\n         *\n         * @param responseTimeout\n         *        Time in milliseconds to wait for a server response\n         */\n        function Ajax(baseUrl, cacheTimeout, responseTimeout) {\n            this._cache = {};\n            this.baseUrl = (baseUrl || '');\n            this.cacheTimeout = (cacheTimeout || 3600000);\n            this.responseTimeout = (responseTimeout || 60000);\n        }\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Requests a server resource\n         *\n         * @param urlPath\n         *        Base relative path to the requested server resource\n         */\n        Ajax.prototype.request = function (urlPath) {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                var url = _this.baseUrl + urlPath;\n                if (_this.cacheTimeout > 0) {\n                    var cachedResult = _this._cache[url];\n                    var cacheTimeout = (new Date()).getTime() + _this.cacheTimeout;\n                    if (cachedResult &&\n                        cachedResult.timestamp > cacheTimeout) {\n                        resolve(cachedResult);\n                        return;\n                    }\n                    delete _this._cache[url];\n                }\n                var server = new XMLHttpRequest();\n                try {\n                    if (_this.cacheTimeout === 0 && url.indexOf('?') === -1) {\n                        server.open('GET', (url + '?' + (new Date()).getTime()), true);\n                    }\n                    else {\n                        server.open('GET', url, true);\n                    }\n                    server.timeout = _this.responseTimeout;\n                    server.addEventListener('load', function (evt) { return resolve({\n                        result: (server.response || '').toString(),\n                        serverStatus: server.status,\n                        timestamp: evt.timeStamp,\n                        url: url\n                    }); });\n                    server.addEventListener('error', function (evt) {\n                        var error = new Error('error');\n                        error.result = server.response.toString();\n                        error.serverStatus = server.status;\n                        error.timestamp = evt.timeStamp;\n                        error.url = url;\n                        reject(error);\n                    });\n                    server.addEventListener('timeout', function (evt) {\n                        var error = new Error('timeout');\n                        error.result = server.response.toString();\n                        error.serverStatus = server.status;\n                        error.timestamp = evt.timeStamp;\n                        error.url = url;\n                        reject(error);\n                    });\n                    server.send();\n                }\n                catch (catchedError) {\n                    var error = catchedError;\n                    error.result = (server.response || '');\n                    error.timestamp = (new Date()).getTime();\n                    error.serverStatus = server.status;\n                    error.url = url;\n                    reject(error);\n                }\n            });\n        };\n        return Ajax;\n    }());\n    exports.Ajax = Ajax;\n});\n//# sourceMappingURL=ajax.js.map;\n","/**\n * @license MIT\n * @author Sophie Bremer\n */\ndefine('@ordbok/core/dist/lib/text',[\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    /**\n     * Inclusive space pattern\n     */\n    var SPACE_REGEXP = /\\s+/g;\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    var Text = /** @class */ (function () {\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        function Text(text) {\n            this._value = text;\n        }\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        Text.endsWith = function (text, pattern) {\n            if (text === pattern) {\n                return true;\n            }\n            var textLength = text.length;\n            var patternLength = pattern.length;\n            return (patternLength <= textLength &&\n                text.lastIndexOf(pattern) === textLength - patternLength);\n        };\n        Text.trimSpaces = function (text) {\n            return text.replace(SPACE_REGEXP, ' ').trim();\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        Text.prototype.endsWith = function (pattern) {\n            return Text.endsWith(this._value, pattern);\n        };\n        Text.prototype.trimSpaces = function () {\n            return new Text(Text.trimSpaces(this._value));\n        };\n        return Text;\n    }());\n    exports.Text = Text;\n});\n//# sourceMappingURL=text.js.map;\n","/**\n * @license MIT\n * @author Sophie Bremer\n */\ndefine('@ordbok/core/dist/lib/markdown',[\"require\", \"exports\", \"./text\"], function (require, exports, text_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    /**\n     * Section headline\n     */\n    var HEADLINE_REGEXP = /^(?:#+([\\s\\S]*)|([\\s\\S]*?)\\n(?:={3,}|-{3,}))$/;\n    /**\n     * Key value pair\n     */\n    var PAIR_REGEXP = /^([^\\:\\n\\r\\t\\v]+):([\\s\\S]*)$/;\n    /**\n     * Page separator\n     */\n    var PAGE_REGEXP = /(?:^\\n?|\\n\\n)-{3,}(?:\\n\\n|\\n?$)/;\n    /**\n     * Paragraph separator\n     */\n    var PARAGRAPH_REGEXP = /\\n{2,}/;\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    /**\n     * Markdown parser\n     */\n    var Markdown = /** @class */ (function () {\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        /**\n         * Parse markdown.\n         *\n         * @param markdown\n         *        Markdown to parse\n         */\n        function Markdown(markdown) {\n            this._pages = [];\n            this._raw = markdown;\n            this.parse(markdown);\n        }\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        /**\n         * Internal markdown page parser\n         *\n         * @param markdownPage\n         *        Markdown page\n         */\n        Markdown.parsePage = function (markdownPage) {\n            var page = {};\n            var match;\n            var section;\n            markdownPage\n                .split(PARAGRAPH_REGEXP)\n                .forEach(function (paragraph) {\n                match = HEADLINE_REGEXP.exec(paragraph);\n                if (match) {\n                    page[text_1.Text.trimSpaces(match[1] || match[2])] = section = {};\n                }\n                if (!section) {\n                    return;\n                }\n                match = PAIR_REGEXP.exec(paragraph);\n                if (match) {\n                    section[match[1]] = match[2]\n                        .split(',')\n                        .map(text_1.Text.trimSpaces);\n                }\n            });\n            return page;\n        };\n        Object.defineProperty(Markdown.prototype, \"pages\", {\n            /**\n             * Markdown pages\n             */\n            get: function () {\n                return this._pages;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Markdown.prototype, \"raw\", {\n            /**\n             * Raw markdown\n             */\n            get: function () {\n                return this._raw;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Internal markdown parser\n         *\n         * @param markdown\n         *        Markdown to parse\n         */\n        Markdown.prototype.parse = function (markdown) {\n            var pages = this._pages;\n            markdown\n                .split(PAGE_REGEXP)\n                .forEach(function (page) { return pages.push(Markdown.parsePage(page)); });\n        };\n        return Markdown;\n    }());\n    exports.Markdown = Markdown;\n});\n//# sourceMappingURL=markdown.js.map;\n","/**\n * @license MIT\n * @author Sophie Bremer\n */\ndefine('@ordbok/core/dist/lib/utilities',[\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    /**\n     * Non-character pattern\n     */\n    var NON_CHARACTER_REGEXP = /[^0-9A-Za-z\\u0080-\\uFFFF- ]/g;\n    /**\n     * Path pattern\n     */\n    var PATH_REGEXP = /^(.*?)([^\\.\\/]*)([^\\/]*)$/;\n    /**\n     * Space pattern\n     */\n    var SPACE_REGEXP = /\\s+/g;\n    /* *\n     *\n     *  Modules\n     *\n     * */\n    var Utilities;\n    (function (Utilities) {\n        /**\n         * Returns the extension of a file path.\n         *\n         * @param filePath\n         *        File path\n         */\n        function getExtension(filePath) {\n            var match = PATH_REGEXP.exec(filePath);\n            return (match && match[3] || '');\n        }\n        Utilities.getExtension = getExtension;\n        /**\n         * Returns the base name of a file path.\n         *\n         * @param filePath\n         *        File path\n         */\n        function getBaseName(filePath) {\n            var match = PATH_REGEXP.exec(filePath);\n            return (match && match[2] || '');\n        }\n        Utilities.getBaseName = getBaseName;\n        /**\n         * Returns the universal key for the given text.\n         *\n         * @param text\n         *        Text to generate key from\n         */\n        function getKey(text) {\n            return text\n                .replace(NON_CHARACTER_REGEXP, ' ')\n                .trim()\n                .replace(SPACE_REGEXP, '-')\n                .toLowerCase();\n        }\n        Utilities.getKey = getKey;\n        /**\n         * Normalize a text to lower case characters and space only.\n         *\n         * @param text\n         *        Text to filter\n         */\n        function getNorm(text) {\n            return text\n                .replace(NON_CHARACTER_REGEXP, ' ')\n                .trim()\n                .replace(SPACE_REGEXP, ' ')\n                .toLowerCase();\n        }\n        Utilities.getNorm = getNorm;\n        /**\n         * Returns the parent part of the path.\n         *\n         * @param path\n         *        Path with parent\n         */\n        function getParentPath(path) {\n            var match = PATH_REGEXP.exec(path);\n            return (match && match[1] || '');\n        }\n        Utilities.getParentPath = getParentPath;\n        /**\n         * Rotates characters in a text.\n         *\n         * @param text\n         *        Text to rotate\n         */\n        function rotate(text) {\n            var result = [];\n            for (var c = 0, i = 0, ie = text.length; i < ie; ++i) {\n                c = text.charCodeAt(i);\n                if (c > 31 && c < 128) {\n                    c += (c < 80 ? 48 : -48);\n                }\n                result.push(String.fromCharCode(c));\n            }\n            return result.join('');\n        }\n        Utilities.rotate = rotate;\n    })(Utilities = exports.Utilities || (exports.Utilities = {}));\n});\n//# sourceMappingURL=utilities.js.map;\n","/**\n * @license MIT\n * @author Sophie Bremer\n */\ndefine('@ordbok/core/dist/lib/index',[\"require\", \"exports\", \"./ajax\", \"./markdown\", \"./text\", \"./utilities\"], function (require, exports, ajax_1, markdown_1, text_1, utilities_1) {\n    \"use strict\";\n    function __export(m) {\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    __export(ajax_1);\n    __export(markdown_1);\n    __export(text_1);\n    __export(utilities_1);\n});\n//# sourceMappingURL=index.js.map;\ndefine('@ordbok/core', ['@ordbok/core/dist/lib/index'], function (main) { return main; });\n\n"]}